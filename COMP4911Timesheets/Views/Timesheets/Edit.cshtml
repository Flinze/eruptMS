@model COMP4911Timesheets.Models.Timesheet

@{
    ViewData["pagetitle"] = "Edit";
}

<h1>Edit</h1>

<h4>Timesheet</h4>
<hr />
<dl class="row">
    <dt class="col-sm-2">
        @Html.DisplayNameFor(model => model.WeekEnding)
    </dt>
    <dd class="col-sm-10">
        @Model.WeekEnding.ToString("yyyy/MM/dd")
    </dd>
    <dt class="col-sm-2">
        @Html.DisplayNameFor(model => model.FlexTime)
    </dt>
    <dd class="col-sm-10">
        @Html.DisplayFor(model => model.FlexTime)
    </dd>
    <dt class="col-sm-2">
        @Html.DisplayNameFor(model => model.Status)
    </dt>
    <dd class="col-sm-10">
        @Html.DisplayFor(model => model.Statuses[Model.Status])
    </dd>
    <dt class="col-sm-2">
        @Html.DisplayNameFor(model => model.Employee)
    </dt>
    <dd class="col-sm-10">
        @Html.DisplayFor(model => model.Employee.LastName)
    </dd>
</dl>
<div class="row">
    <div class="col-md-4">
        <form asp-action="Edit">
            <div asp-validation-summary="ModelOnly" class="text-danger"></div>
            <input type="hidden" asp-for="TimesheetId" />
            <input type="hidden" asp-for="EmployeeId" />
            <input type="hidden" asp-for="EmployeePayId" />
            <input type="hidden" asp-for="SignatureId" />
            <input type="hidden" asp-for="Status" />
            <input type="hidden" asp-for="FlexTime" />
            @if (Model.Statuses[Model.Status] == "Not Submitted & Not Approved" || Model.Statuses[Model.Status] == "Rejected & Need Resubmission")
            {
                @Html.ActionLink("Create New Row", "Create", "TimesheetRows", new { id = Model.TimesheetId }, new { @class = "btn btn-primary", @role = "button" })
            }

            <table class="table">
                <thead>
                    <tr>
                        <th>
                            Project
                        </th>
                        <th>
                            WorkPackage
                        </th>
                        <th>
                            SatHour
                        </th>
                        <th>
                            SunHour
                        </th>
                        <th>
                            MonHour
                        </th>
                        <th>
                            TueHour
                        </th>
                        <th>
                            WedHour
                        </th>
                        <th>
                            ThuHour
                        </th>
                        <th>
                            FriHour
                        </th>
                        <th>
                            Notes
                        </th>

                        <th></th>
                        <th></th>
                    </tr>
                </thead>
                <tbody>
                    @if (Model.TimesheetRows != null)
                    {
                        foreach (var item in Model.TimesheetRows)
                        {
                            <tr>
                                <td>
                                    @item.WorkPackage.Project.Name
                                </td>
                                <td>
                                    @item.WorkPackage.Name
                                </td>
                                <td>
                                    @Html.DisplayFor(modelItem => item.SatHour)
                                </td>
                                <td>
                                    @Html.DisplayFor(modelItem => item.SunHour)
                                </td>
                                <td>
                                    @Html.DisplayFor(modelItem => item.MonHour)
                                </td>
                                <td>
                                    @Html.DisplayFor(modelItem => item.TueHour)
                                </td>
                                <td>
                                    @Html.DisplayFor(modelItem => item.WedHour)
                                </td>
                                <td>
                                    @Html.DisplayFor(modelItem => item.ThuHour)
                                </td>
                                <td>
                                    @Html.DisplayFor(modelItem => item.FriHour)
                                </td>
                                <td>
                                    @Html.DisplayFor(modelItem => item.Notes)
                                </td>
                                <td>
                                    @if (Model.Statuses[Model.Status] == "Not Submitted & Not Approved" || Model.Statuses[Model.Status] == "Rejected & Need Resubmission")
                                    {
                                        @Html.ActionLink("Edit", "Edit", "TimesheetRows", new { id = item.TimesheetRowId }, new { @class = "btn btn-primary", @role = "button" })
                                    }
                                </td>
                                <td>
                                    @if (Model.Statuses[Model.Status] == "Not Submitted & Not Approved" || Model.Statuses[Model.Status] == "Rejected & Need Resubmission")
                                    {
                                        @Html.ActionLink("Delete", "DeleteRow", "Timesheets", new { id = item.TimesheetRowId }, new { @class = "btn btn-primary", @role = "button" })
                                    }
                                </td>
                            </tr>
                        }
                    }
                </tbody>
            </table>

            @if (Model.Statuses[Model.Status] == "Not Submitted & Not Approved" || Model.Statuses[Model.Status] == "Rejected & Need Resubmission")
            {
                @Html.ActionLink("Submit", "Submit", "Timesheets", new { id = Model.TimesheetId }, new { @class = "btn btn-primary", @role = "button" })
            }
            @if (Model.Statuses[Model.Status] == "Submitted & Not Approved")
            {
                @Html.ActionLink("Retract", "Retract", "Timesheets", new { id = Model.TimesheetId }, new { @class = "btn btn-primary", @role = "button" })
            }

        </form>
    </div>
</div>
<br />


<div>
    <a asp-action="Index">Back to List</a>
</div>

@section Scripts {
    @{await Html.RenderPartialAsync("_ValidationScriptsPartial");}
}
