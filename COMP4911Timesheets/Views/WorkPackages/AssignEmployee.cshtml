@model IEnumerable<COMP4911Timesheets.ViewModels.EmployeeManagement>

@{
    ViewData["PageTitle"] = "Index";
}

<h1>Assign Employees to Work Packages</h1>
<h4>@TempData["info"]</h4>

<table class="table well bs-component">
    <thead>
        <tr>
            <th>
                @Html.DisplayNameFor(model => model.Employee.EmployeeId)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Employee.FirstName)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Employee.LastName)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.EmployeePay.PayGrade.PayLevel)
            </th>
            <th class="priority-2">
                Roles
            </th>
            <th class="priority-2">
                @Html.DisplayNameFor(model => model.Employee.Status)
            </th>
            <th></th>
            <th></th>
        </tr>
    </thead>
    <tbody>
        @foreach (var item in Model)
        {
            <tr>
                <td>
                    @Html.DisplayFor(modelItem => item.Employee.EmployeeId)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Employee.FirstName)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Employee.LastName)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.EmployeePay.PayGrade.PayLevel)
                </td>
                @if (item.Role == 100)
                {
                    <td>
                        PROJECT MANAGER
                    </td>
                }

                @if (item.Role == 110)
                {
                    <td>
                        PROJECT ASSISTANT
                    </td>
                }
                @if (item.Role == 200)
                {
                    <td>
                        RESPONSIBLE ENGINEER
                    </td>
                }
                @if (item.Role == 300)
                {
                    <td>
                        EMPLOYEE
                    </td>
                }
                @if (item.Role == 900)
                {
                    <td>
                        NOT ASSIGNED
                    </td>
                }
                <td class="priority-2">
                    @Html.DisplayFor(modelItem => COMP4911Timesheets.Models.Employee.JobTitles[item.Employee.Title])
                </td>
                <td class="priority-2">
                    @Html.DisplayFor(modelItem => COMP4911Timesheets.Models.Employee.Statuses[item.Employee.Status])
                </td>
                <td>
                    @Html.ActionLink("AssignRE", "AssignRE", "WorkPackages", new { EmployeeId = item.Employee.Id, name = item.Employee.FirstName},
                        new { @class = "btn btn-primary btn-block", @role = "button" })
                </td>
                <td>
                    @Html.ActionLink("AssignEm", "AssignEm", "WorkPackages", new { EmployeeId = item.Employee.Id },
                        new { @class = "btn btn-primary btn-block", @role = "button" })
                </td>
            </tr>
        }
    </tbody>
</table>

<a asp-action="ProjectWorkPackges" asp-controller="WorkPackages" asp-route-id="@ViewData["projectId"]">Back to List</a>
