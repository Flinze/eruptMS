// <auto-generated />
using System;
using COMP4911Timesheets.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace COMP4911Timesheets.Data.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20190204221637_EruptMigration")]
    partial class EruptMigration
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.2.1-servicing-10028")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("COMP4911Timesheets.Models.Approver", b =>
                {
                    b.Property<int>("ApproverId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("Status");

                    b.HasKey("ApproverId");

                    b.ToTable("Approvers");
                });

            modelBuilder.Entity("COMP4911Timesheets.Models.Budget", b =>
                {
                    b.Property<int>("BudgetId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<double>("Hour");

                    b.Property<int>("PayGradeId");

                    b.Property<int>("Status");

                    b.Property<int>("Type");

                    b.Property<int>("WorkPacakgeId");

                    b.Property<int?>("WorkPackageId");

                    b.HasKey("BudgetId");

                    b.HasIndex("PayGradeId");

                    b.HasIndex("WorkPackageId");

                    b.ToTable("Budgets");
                });

            modelBuilder.Entity("COMP4911Timesheets.Models.Credential", b =>
                {
                    b.Property<int>("CredentialId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("EmployeeId");

                    b.Property<string>("Password");

                    b.Property<int>("Status");

                    b.HasKey("CredentialId");

                    b.HasIndex("EmployeeId");

                    b.ToTable("Credentials");
                });

            modelBuilder.Entity("COMP4911Timesheets.Models.Employee", b =>
                {
                    b.Property<int>("EmployeeId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("ApproverId");

                    b.Property<DateTime>("CreatedTime");

                    b.Property<string>("FirstName");

                    b.Property<double>("FlexTime");

                    b.Property<string>("LastName");

                    b.Property<int>("Status");

                    b.Property<int>("SupervisorId");

                    b.Property<int>("Title");

                    b.Property<double>("VacationTime");

                    b.HasKey("EmployeeId");

                    b.HasIndex("ApproverId");

                    b.HasIndex("SupervisorId");

                    b.ToTable("Employees");
                });

            modelBuilder.Entity("COMP4911Timesheets.Models.EmployeePay", b =>
                {
                    b.Property<int>("EmployeePayId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("EmployeeId");

                    b.Property<int>("PayGradeId");

                    b.Property<int>("Status");

                    b.Property<int>("Year");

                    b.HasKey("EmployeePayId");

                    b.HasIndex("EmployeeId");

                    b.HasIndex("PayGradeId");

                    b.ToTable("EmployeePays");
                });

            modelBuilder.Entity("COMP4911Timesheets.Models.ParentWorkPackage", b =>
                {
                    b.Property<int>("ParentWorkPckageId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("Status");

                    b.HasKey("ParentWorkPckageId");

                    b.ToTable("ParentWorkPackages");
                });

            modelBuilder.Entity("COMP4911Timesheets.Models.PayGrade", b =>
                {
                    b.Property<int>("PayGradeId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<double>("Cost");

                    b.Property<string>("PayLevel");

                    b.Property<int>("Year");

                    b.HasKey("PayGradeId");

                    b.ToTable("PayGrade");
                });

            modelBuilder.Entity("COMP4911Timesheets.Models.Project", b =>
                {
                    b.Property<int>("ProjectId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("CostAtImplementation");

                    b.Property<string>("CostingProposal");

                    b.Property<string>("Description");

                    b.Property<string>("Name");

                    b.Property<string>("OriginalBudget");

                    b.Property<int>("Status");

                    b.HasKey("ProjectId");

                    b.ToTable("Projects");
                });

            modelBuilder.Entity("COMP4911Timesheets.Models.ProjectEmployee", b =>
                {
                    b.Property<int>("ProjectEmployeeId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("EmployeeId");

                    b.Property<int>("ProjectId");

                    b.Property<int>("Role");

                    b.Property<int>("Status");

                    b.HasKey("ProjectEmployeeId");

                    b.HasIndex("EmployeeId");

                    b.HasIndex("ProjectId");

                    b.ToTable("ProjectEmployees");
                });

            modelBuilder.Entity("COMP4911Timesheets.Models.ProjectReport", b =>
                {
                    b.Property<int>("ProjectReportId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<double>("CompletedPercentage");

                    b.Property<DateTime>("CreatedTime");

                    b.Property<int>("ProjectId");

                    b.Property<double>("StartingPercentage");

                    b.Property<int>("Status");

                    b.HasKey("ProjectReportId");

                    b.HasIndex("ProjectId");

                    b.ToTable("ProjectReports");
                });

            modelBuilder.Entity("COMP4911Timesheets.Models.Signature", b =>
                {
                    b.Property<int>("SignatureId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("CreatedTime");

                    b.Property<int>("EmployeeId");

                    b.Property<string>("HashedSignature");

                    b.Property<string>("PassPhrase");

                    b.Property<int>("Status");

                    b.HasKey("SignatureId");

                    b.HasIndex("EmployeeId");

                    b.ToTable("Signatures");
                });

            modelBuilder.Entity("COMP4911Timesheets.Models.Supervisor", b =>
                {
                    b.Property<int>("SupervisorId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("Status");

                    b.HasKey("SupervisorId");

                    b.ToTable("Supervisors");
                });

            modelBuilder.Entity("COMP4911Timesheets.Models.Timesheet", b =>
                {
                    b.Property<int>("TimesheetId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("EmployeeId");

                    b.Property<double>("FlexTime");

                    b.Property<int>("Status");

                    b.Property<DateTime>("WeekEnding");

                    b.Property<int>("WeekNumber");

                    b.HasKey("TimesheetId");

                    b.HasIndex("EmployeeId");

                    b.ToTable("Timesheets");
                });

            modelBuilder.Entity("COMP4911Timesheets.Models.TimesheetRow", b =>
                {
                    b.Property<int>("TimesheetRowId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<double>("FriHour");

                    b.Property<double>("MonHour");

                    b.Property<string>("Notes");

                    b.Property<int>("PayGradeId");

                    b.Property<double>("SatHour");

                    b.Property<double>("SunHour");

                    b.Property<double>("ThuHour");

                    b.Property<int>("TimesheetId");

                    b.Property<double>("TueHour");

                    b.Property<double>("WedHour");

                    b.Property<int>("WorkPackageId");

                    b.HasKey("TimesheetRowId");

                    b.HasIndex("PayGradeId");

                    b.HasIndex("TimesheetId");

                    b.HasIndex("WorkPackageId");

                    b.ToTable("TimesheetRows");
                });

            modelBuilder.Entity("COMP4911Timesheets.Models.WorkPackage", b =>
                {
                    b.Property<int>("WorkPackageId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Activity");

                    b.Property<string>("Contractor");

                    b.Property<string>("Description");

                    b.Property<string>("Input");

                    b.Property<bool>("IsParent");

                    b.Property<string>("Name");

                    b.Property<string>("Output");

                    b.Property<int>("ParentWorkPackageId");

                    b.Property<int>("ProjectId");

                    b.Property<string>("Purpose");

                    b.Property<string>("WorkPackageCode");

                    b.HasKey("WorkPackageId");

                    b.HasIndex("ParentWorkPackageId");

                    b.HasIndex("ProjectId");

                    b.ToTable("WorkPackages");
                });

            modelBuilder.Entity("COMP4911Timesheets.Models.WorkPackageEmployee", b =>
                {
                    b.Property<int>("WorkPackageEmployeeId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("EmployeeId");

                    b.Property<int>("Role");

                    b.Property<int>("Status");

                    b.Property<int>("WorkPackageId");

                    b.HasKey("WorkPackageEmployeeId");

                    b.HasIndex("EmployeeId");

                    b.HasIndex("WorkPackageId");

                    b.ToTable("WorkPackageEmployees");
                });

            modelBuilder.Entity("COMP4911Timesheets.Models.WorkPackageReport", b =>
                {
                    b.Property<int>("WorkPackageReportId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Comments");

                    b.Property<string>("Problem");

                    b.Property<string>("ProblemAnticipated");

                    b.Property<int>("Status");

                    b.Property<int>("WeekNumber");

                    b.Property<string>("WorkAccomplished");

                    b.Property<string>("WorkAccomplishedNP");

                    b.Property<int>("WorkPackageId");

                    b.HasKey("WorkPackageReportId");

                    b.HasIndex("WorkPackageId");

                    b.ToTable("WorkPackageReports");
                });

            modelBuilder.Entity("COMP4911Timesheets.Models.Budget", b =>
                {
                    b.HasOne("COMP4911Timesheets.Models.PayGrade", "PayGrade")
                        .WithMany("Budgets")
                        .HasForeignKey("PayGradeId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("COMP4911Timesheets.Models.WorkPackage", "WorkPackage")
                        .WithMany("Budgets")
                        .HasForeignKey("WorkPackageId");
                });

            modelBuilder.Entity("COMP4911Timesheets.Models.Credential", b =>
                {
                    b.HasOne("COMP4911Timesheets.Models.Employee", "Employee")
                        .WithMany("Credentials")
                        .HasForeignKey("EmployeeId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("COMP4911Timesheets.Models.Employee", b =>
                {
                    b.HasOne("COMP4911Timesheets.Models.Approver", "Approver")
                        .WithMany("Employees")
                        .HasForeignKey("ApproverId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("COMP4911Timesheets.Models.Supervisor", "Supervisor")
                        .WithMany("Employees")
                        .HasForeignKey("SupervisorId")
                        .OnDelete(DeleteBehavior.Restrict);
                });

            modelBuilder.Entity("COMP4911Timesheets.Models.EmployeePay", b =>
                {
                    b.HasOne("COMP4911Timesheets.Models.Employee", "Employee")
                        .WithMany("EmployeePays")
                        .HasForeignKey("EmployeeId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("COMP4911Timesheets.Models.PayGrade", "PayGrade")
                        .WithMany("EmployeePays")
                        .HasForeignKey("PayGradeId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("COMP4911Timesheets.Models.ProjectEmployee", b =>
                {
                    b.HasOne("COMP4911Timesheets.Models.Employee", "Employee")
                        .WithMany("ProjectEmployees")
                        .HasForeignKey("EmployeeId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("COMP4911Timesheets.Models.Project", "Project")
                        .WithMany("ProjectEmployees")
                        .HasForeignKey("ProjectId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("COMP4911Timesheets.Models.ProjectReport", b =>
                {
                    b.HasOne("COMP4911Timesheets.Models.Project", "Project")
                        .WithMany("ProjectReports")
                        .HasForeignKey("ProjectId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("COMP4911Timesheets.Models.Signature", b =>
                {
                    b.HasOne("COMP4911Timesheets.Models.Employee", "Employee")
                        .WithMany("Signatures")
                        .HasForeignKey("EmployeeId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("COMP4911Timesheets.Models.Timesheet", b =>
                {
                    b.HasOne("COMP4911Timesheets.Models.Employee", "Employee")
                        .WithMany("Timesheets")
                        .HasForeignKey("EmployeeId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("COMP4911Timesheets.Models.TimesheetRow", b =>
                {
                    b.HasOne("COMP4911Timesheets.Models.PayGrade", "PayGrade")
                        .WithMany("TimesheetRows")
                        .HasForeignKey("PayGradeId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("COMP4911Timesheets.Models.Timesheet", "Timesheet")
                        .WithMany("TimesheetRows")
                        .HasForeignKey("TimesheetId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("COMP4911Timesheets.Models.WorkPackage", "WorkPackage")
                        .WithMany("TimesheetRows")
                        .HasForeignKey("WorkPackageId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("COMP4911Timesheets.Models.WorkPackage", b =>
                {
                    b.HasOne("COMP4911Timesheets.Models.ParentWorkPackage", "ParentWorkPackage")
                        .WithMany("WorkPackages")
                        .HasForeignKey("ParentWorkPackageId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("COMP4911Timesheets.Models.Project", "Project")
                        .WithMany("WorkPackages")
                        .HasForeignKey("ProjectId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("COMP4911Timesheets.Models.WorkPackageEmployee", b =>
                {
                    b.HasOne("COMP4911Timesheets.Models.Employee", "Employee")
                        .WithMany("WorkPackageEmployees")
                        .HasForeignKey("EmployeeId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("COMP4911Timesheets.Models.WorkPackage", "WorkPackage")
                        .WithMany("WorkPackageEmployees")
                        .HasForeignKey("WorkPackageId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("COMP4911Timesheets.Models.WorkPackageReport", b =>
                {
                    b.HasOne("COMP4911Timesheets.Models.WorkPackage", "WorkPackage")
                        .WithMany("WorkPackageReports")
                        .HasForeignKey("WorkPackageId")
                        .OnDelete(DeleteBehavior.Cascade);
                });
#pragma warning restore 612, 618
        }
    }
}
